# Test database configuration - Use H2 in-memory database
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.defer-datasource-initialization=true

# Disable security auto-configuration for tests
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Security configuration
spring.security.user.name=test
spring.security.user.password=test

# File storage configuration
file.upload-dir=uploads-test

# Logging configuration
logging.level.org.springframework=DEBUG
logging.level.com.greenlink.greenlink=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.springframework.security=DEBUG

# Spring configuration
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

# H2 Console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Test configuration
spring.test.database.replace=none

# Disable SQL initialization for tests
spring.sql.init.mode=never

# Stripe Configuration
stripe.secret-key=${STRIPE_SECRET_KEY}
stripe.publishable-key=${STRIPE_PUBLISHABLE_KEY}
stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET}
stripe.platform-commission-percentage=5.0

# Google OAuth2 Configuration
# Use environment variables for security - set these in your environment
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId} 
# PostgreSQL Database Configuration
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://dpg-d1n8gmre5dus73c9jlcg-a.frankfurt-postgres.render.com/glink_eh14}
spring.datasource.username=${JDBC_DATABASE_USERNAME:user}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:l76Hl3kUtddpTrUuObuXWxCxSrmDI7Iz}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# SQL initialization - Execute after Hibernate initialization
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

# Flyway configuration - completely disabled
spring.flyway.enabled=false

# Thymeleaf configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Logging configuration
logging.level.root=INFO
logging.level.org.springframework=DEBUG
logging.level.com.greenlink=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security.authentication=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.web.resources.static-locations=classpath:/static/,file:uploads/

# File storage configuration
file.upload-dir=uploads

# Server configuration
server.port=8080

# Show detailed startup info
spring.main.log-startup-info=true
debug=true

# Additional debug settings
logging.level.org.springframework.boot.autoconfigure=DEBUG
spring.jpa.properties.hibernate.generate_statistics=true 

# Stripe Configuration
stripe.secret-key=${STRIPE_SECRET_KEY:sk_test_51RmIofPEjVl4wGJcILAG8egKfFeeEuyDPiWrDalqbGPLBWLpiFgeqQ7AVFh38TFWC1QqX3KchYDau6Gm5xWd23YS002RSp8Qgo}
stripe.publishable-key=${STRIPE_PUBLISHABLE_KEY:pk_test_51RmIofPEjVl4wGJcIGciWqf1DXj4DcpxsfvgLtVCL6mV7enRFuNEyWuDwHBtW9kgvl5tNZALyrewrCQklKokc3WZ00HCP8QuAw}
stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET:whsec_b42dc5047b74532b923a6977ea459fdc477853e2441765b3f45f660ea844fb36}
stripe.platform-commission-percentage=5.0

# Google OAuth2 Configuration
# Use environment variables for security - set these in your environment
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:735830187367-tc0ek5aies9qanh2j0ba75f4t6ojr4o0.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId} 